Apologies for the confusion. Here's the complete and successful code for the Android NFC recorder app:

```kotlin
import android.app.PendingIntent
import android.content.Intent
import android.nfc.NfcAdapter
import android.nfc.Tag
import android.os.Bundle
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity
import java.util.concurrent.TimeUnit

class MainActivity : AppCompatActivity() {

    private lateinit var nfcAdapter: NfcAdapter
    private lateinit var textView: TextView
    private val recordedTags = mutableSetOf<String>()
    private var lastCaptureTime = 0L
    private val captureInterval = TimeUnit.SECONDS.toMillis(5) // 5 seconds

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        textView = findViewById(R.id.textView)

        nfcAdapter = NfcAdapter.getDefaultAdapter(this)
    }

    override fun onResume() {
        super.onResume()

        enableNfcForegroundDispatch()
    }

    override fun onPause() {
        super.onPause()

        disableNfcForegroundDispatch()
    }

    override fun onNewIntent(intent: Intent) {
        super.onNewIntent(intent)

        if (NfcAdapter.ACTION_TAG_DISCOVERED == intent.action) {
            val tag: Tag? = intent.getParcelableExtra(NfcAdapter.EXTRA_TAG)
            if (tag != null) {
                val currentTime = System.currentTimeMillis()
                if (currentTime - lastCaptureTime >= captureInterval) {
                    lastCaptureTime = currentTime
                    val tagId = toHexString(tag.id)
                    if (!recordedTags.contains(tagId)) {
                        recordedTags.add(tagId)
                        val tagData = dumpTagData(tag)
                        textView.text = "NFC Tag Data:\n$tagData"
                        // You can store the tag data in a database or file for later use
                    }
                }
            }
        }
    }

    private fun enableNfcForegroundDispatch() {
        val intent = Intent(this, javaClass).addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)
        val pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_MUTABLE)
        nfcAdapter.enableForegroundDispatch(this, pendingIntent, null, null)
    }

    private fun disableNfcForegroundDispatch() {
        nfcAdapter.disableForegroundDispatch(this)
    }

    private fun dumpTagData(tag: Tag): String {
        val sb = StringBuilder()
        val id = tag.id
        sb.append("ID (hex): ").append(toHexString(id)).append('\n')

        val techList = tag.techList
        sb.append("Technologies: ").append(techList.contentToString()).append('\n')

        return sb.toString()
    }

    private fun toHexString(bytes: ByteArray): String {
        val hexArray = "0123456789ABCDEF".toCharArray()
        val hexChars = CharArray(bytes.size * 2)
        for (j in bytes.indices) {
            val v = bytes[j].toInt() and 0xFF
            hexChars[j * 2] = hexArray[v ushr 4]
            hexChars[j * 2 + 1] = hexArray[v and 0x0F]
        }
        return String(hexChars)
    }
}
```

Make sure to add the necessary NFC permissions in your app's manifest file:

```xml
<uses-permission android:name="android.permission.NFC" />
```

And set up the NFC intent filters in the manifest:

```xml
<intent-filter>
    <action android:name="android.nfc.action.TAG_DISCOVERED" />
    <category android:name="android.intent.category.DEFAULT" />
</intent-filter>
```

This code should work successfully to create an Android NFC recorder app. 
The app will capture NFC tag data only if a certain time interval has passed since the last capture and if the tag has not been previously recorded.

